version: '3.8'

services:
  kafka:
    image: bitnami/kafka:3.9
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_KRAFT_CLUSTER_ID: kraft-cluster-12345
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka-data:/bitnami/kafka

  init-kafka:
    image: bitnami/kafka:3.9.0
    depends_on:
      - kafka
    entrypoint: ["/bin/bash", "-c"]
    command: >
      "
      echo 'Esperando que Kafka estÃ© listo...' &&
      while ! kafka-topics.sh --bootstrap-server kafka:9092 --list > /dev/null 2>&1; do sleep 2; done &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic flight-delay-ml-request --partitions 1 --replication-factor 1 &&
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic flight-delay-ml-response --partitions 1 --replication-factor 1
      "

  mongodb:
    image: mongo:4.0
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./data:/data
      - ./resources/import_distances.sh:/docker-entrypoint-initdb.d/init.sh

  cassandra:
    image: cassandra:4.1
    container_name: cassandra
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
      
  cassandra-migrator:
    image: python:3.9
    container_name: cassandra-migrator
    depends_on:
      - cassandra        
      - mongodb          
    volumes:
      - ./data:/app      # AQUI ESTA EL  migracion_cassandra.py
    command: >
      bash -c "
        pip install cassandra-driver pymongo &&
        python /app/migracion_cassandra.py
      "
    restart: "no"        

  flask:
    build: .
    ports:
      - "5001:5001"
    depends_on:
      - mongodb
    environment:
      - PROJECT_HOME=/home/ibdn/practica_creativa
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017

  spark-master:
    image: bitnami/spark:3.5.3
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
    ports:
      - "7077:7077"
      - "8080:8080"
    volumes:
      - ./flight_prediction/target/scala-2.12:/home/ibdn/practica_creativa/flight_prediction/target/scala-2.12
      - ./models:/home/ibdn/practica_creativa/models

  spark-worker:
    image: bitnami/spark:3.5.3
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    depends_on:
      - spark-master
    volumes:
      - ./flight_prediction/target/scala-2.12:/home/ibdn/practica_creativa/flight_prediction/target/scala-2.12
      - ./models:/home/ibdn/practica_creativa/models

  spark-job:
    image: bitnami/spark:3.5.3
    depends_on:
      - kafka
      - mongodb
      - spark-master
      - namenode1
      - cassandra
    volumes:
      - ./flight_prediction/target/scala-2.12:/home/ibdn/practica_creativa/flight_prediction/target/scala-2.12
      - ./models:/home/ibdn/practica_creativa/models
    command: >
      bash -c "sleep 30 &&
      spark-submit
      --master spark://spark-master:7077
      --conf spark.cassandra.connection.host=cassandra
      --conf spark.cassandra.connection.port=9042
      --class es.upm.dit.ging.predictor.MakePrediction
      --packages org.mongodb.spark:mongo-spark-connector_2.12:10.4.1,org.apache.spark:spark-sql-kafka-0-10_2.12:3.5.3,com.datastax.spark:spark-cassandra-connector_2.12:3.5.0
      /home/ibdn/practica_creativa/flight_prediction/target/scala-2.12/flight_prediction_2.12-0.1.jar"

  nifi:
    image: apache/nifi:1.25.0
    container_name: nifi
    environment:
      - SINGLE_USER_CREDENTIALS_USERNAME=admin
      - SINGLE_USER_CREDENTIALS_PASSWORD=098765432100
    ports:
      - "8443:8443"
      - "5050:5050"
    volumes:
      - nifi_data:/opt/nifi/nifi-current/data
      - ./predictions:/opt/nifi/output

  namenode1:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    networks:
      default:
        aliases:
          - namenode
    ports:
      - "50070:50070"
      - "9870:9870"
      - "8020:8020"
    environment:
      - CLUSTER_NAME=example1
      - INIT_DAEMON_STEP=setup_hdfs
      - HDFS_CONF_dfs_webhdfs_enabled=true
      - HDFS_CONF_dfs_permissions_enabled=false
      - CORE_CONF_hadoop_proxyuser_hue_hosts=*
      - CORE_CONF_hadoop_proxyuser_hue_groups=*
    volumes:
      - ./volumes/namenode1:/hadoop/dfs/name

  datanode1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    environment:
      - CORE_CONF_fs_defaultFS=hdfs://namenode1:8020
      - HDFS_CONF_dfs_webhdfs_enabled=true
    ports:
      - "50075:50075"
      - "9864:9864"
    volumes:
      - ./volumes/datanode1:/hadoop/dfs/data

volumes:
  kafka-data:
  mongo-data:
  nifi_data:
  cassandra_data:

